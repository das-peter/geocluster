<?php

require_once 'geocluster.geohash.inc';

/**
 * Implements hook_install().
 */
function geocluster_install() {
  _geocluster_handle_fields();


  $type = entity_create('geocluster_item_type', array(
    'type' => 'node__article',
    'label' => t('Node article geocluster item type'),
  ));
  $type->save();
  drupal_set_message(t('A geocluster item type has been created and assigned to node articles. Go to the <a href="!url">Profile types</a> page to add some fields or to configure further profile types.', array('!url' => url('admin/structure/profiles'))));
}



/**
 * Implements hook_uninstall().
 */
function geocluster_uninstall() {
  _geocluster_handle_fields('uninstall');
}

/**
 * Manually add/remove db columns for existing fields.
 *
 * Based on http://drupal.org/node/691932#comment-6413832.
 */
function _geocluster_handle_fields($op='install') {
  $fields = field_info_fields();
  foreach ($fields as $field) {
    if ($field['type'] == 'geofield') {
      // Perform actions on every table including revisions tables.
      foreach($field['storage']['details']['sql'] as $sql) {
        foreach($sql as $table_name => $table_data) {
          $schema['columns'] = array();
          geocluster_field_schema_alter($schema, $field);
          foreach($schema['columns'] as $field_name => $spec) {
            $field_name = $field['field_name'] . '_' . $field_name;
            if($op == 'install') {
              db_add_field($table_name, $field_name, $spec);
            }
            if($op == 'uninstall') {
              db_drop_field($table_name, $field_name);
            }
          }
        }
      }
    }
  }
}


/**
 * Implements hook_schema().
 */
function geocluster_schema() {
  $schema['geocluster_item_type'] = array(
    'description' => 'Stores information about all defined geocluster item types.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique geocluster item type ID.',
      ),
      'type' => array(
        'description' => 'The machine-readable name of this geocluster item type.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human-readable name of this geocluster item type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        // Set the default to ENTITY_CUSTOM without using the constant as it is
        // not safe to use it at this point.
        'default' => 0x01,
        'size' => 'tiny',
        'description' => 'The exportable status of the entity.',
      ),
      'module' => array(
        'description' => 'The name of the providing module if the entity has been defined in code.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
    'unique keys' => array(
      'type' => array('type'),
    ),
  );
  return $schema;
}

